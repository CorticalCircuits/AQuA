%% Batch Soma heat maps Filter
% Function Selection
% Choose multiple .mat files to compare critical data
clear ; close all;
path_temp = fileparts(which(mfilename));
addpath(genpath(path_temp));
clearvars path_temp; % Add subfolders to path
paths = uipickfiles('FilterSpec','*.mat');
if isnumeric(paths)
    error('No file Selected');
end
imageSavePath = 'C:\Users\coter027\Documents\AQUA Parameter Comparisons figures\Batch V3.0\HeatMaps_IT3'; %Path to save images generated by hotSpot
%% Loading and Extraction

file_number = numel(paths);
thresh = 50;            % Score threshold for moving events
fl = cell(1 , file_number);
names = cell(1 , file_number);
T(1:file_number) = struct('res',[],'SizeThr',[]);
 
for n = 1:file_number
    [p,names{n},ext] = fileparts(paths{n});
    addpath(p)
    filename = strcat(names{n},ext);
    names{n} = erase(names{n} , '_AQuA');

    dummy = load(filename);
    T(n).res = dummy.res;  % Data from all trials is stored here
    fprintf('File %i out of %i Loaded\n' , n , file_number);

    filename = string(strsplit(filename,'_'));
    filename = strsplit(filename(2),'.');
    fl(n) = {filename(1)};

    if ~isfield(T(n).res,'fts')
        error('Landmark was not selected during Pre-Processing');
    end

    rmpath(p)
%  T(n).SizeThr = SizeThr(T(n).res,0);
    clear dummy
end
%% Heat Maps and setting threshold
%threshold = T(n).res.fts.basic.area>10
% threshold = all([T(n).res.fts.basic.area>10;T(n).res.fts.basic.area<50]);
% threshold = all([T(n).res.fts.basic.area<50]);
%use line above if multiple conditions are to be filtered on same map
h(1) = figure('units','normalized');
tiledlayout(5,3); %Use if number of rows and cloums for figure is known 
%tiledlayout('flow') %If figure is for one cell use this one as its easier
for n = 1:numel(T)
mnIm = mean(T(n).res.datOrg,3);
picsize = size(T(n).res.datOrg);
evtMap = zeros(picsize(1),picsize(2));
totalmap = zeros(picsize(1),picsize(2));
% evtIndex = find((threshold)); % Change the filter here as well directly to find the correct event index to include in map
evtIndex = find((T(n).res.fts.basic.area<=(max(T(n).res.fts.basic.area))))% if a single condition for threshold use this line
for evtNumber = 1:length(evtIndex) %Change the Filter here in the index for res.evt
evtXYpix = T(n).res.fts.loc.x2D{evtIndex(evtNumber)};
evtMap(evtXYpix) = 1;
totalmap = totalmap + evtMap;
evtMap = zeros(picsize(1),picsize(2));
end
bottom = min(min(totalmap));
top = max(max(totalmap));
nexttile
imagesc(totalmap); 
colormap(hot); 
axis image;
set(gca,'xtick',[]); set(gca,'ytick',[]);
% title(['Filtered Heat Map of Cell Parameter:' num2str(n)]); %If listed by
% each parameter
title(['Filtered Heat Map of Cell: ' T(n).res.opts.fileName]); %If listed by each cell 
caxis manual; caxis([bottom top]);
hcb = colorbar;
set(get(hcb,'label'),'string','# of events pixel is in');
end